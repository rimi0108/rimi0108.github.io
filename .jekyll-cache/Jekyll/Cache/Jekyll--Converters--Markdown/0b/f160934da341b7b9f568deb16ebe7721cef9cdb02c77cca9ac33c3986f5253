I"((<blockquote>
  <p>우리가 django 프로젝트를 git으로 추적하고 github에 올릴 때 올려서는 안되는 정보가 있습니다. 바로 SECRET_KEY 입니다.</p>
</blockquote>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>django-admin startproject test_project
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>└── test_project
    ├── manage.py
    └── test_project
        ├── __init__.py
        ├── asgi.py
        ├── settings.py
        ├── urls.py
        └── wsgi.py
</code></pre></div></div>

<p>우리가 <code class="language-plaintext highlighter-rouge">django-admin startproject 프로젝트 이름</code> 명령어로 django project를 시작하면 django project의 기본 구조가 위와 같이 만들어 집니다.</p>

<p>프로젝트의 <code class="language-plaintext highlighter-rouge">settings.py</code> 파일에는 SECRET_KEY라는 git에 올라가서는 안되는 민감한 정보가 담긴 코드가 있습니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># SECURITY WARNING: keep the secret key used in production secret!
</span><span class="n">SECRET_KEY</span> <span class="o">=</span> <span class="s">'my_secret_key'</span>
</code></pre></div></div>

<p>위와 같은 SECRET_KEY를 git이 추적하지 못하게 설정해주어야 합니다. (SECRET_KEY인 my_secret_key는 임의로 설정해 주었습니다.)</p>

<p>우리는 <code class="language-plaintext highlighter-rouge">Django-environ</code>이라는 라이브러리로 이 SECRET_KEY를 따로 빼내어 관리할 수 있습니다.</p>

<h2 id="django-environ">Django-environ</h2>

<p><a href="https://django-environ.readthedocs.io/en/latest/">Django-environ Docs</a></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pip install django-environ
</code></pre></div></div>

<p>✔ 먼저 django-environ를 설치해줍니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># settings.py
</span><span class="kn">from</span> <span class="nn">pathlib</span> <span class="kn">import</span> <span class="n">Path</span>

<span class="c1"># Build paths inside the project like this: BASE_DIR / 'subdir'.
</span><span class="n">BASE_DIR</span> <span class="o">=</span> <span class="n">Path</span><span class="p">(</span><span class="n">__file__</span><span class="p">).</span><span class="n">resolve</span><span class="p">().</span><span class="n">parent</span><span class="p">.</span><span class="n">parent</span>


<span class="c1"># Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/
</span>
<span class="c1"># SECURITY WARNING: keep the secret key used in production secret!
</span><span class="n">SECRET_KEY</span> <span class="o">=</span> <span class="s">'my_secret_key'</span>
</code></pre></div></div>

<p>✔ <code class="language-plaintext highlighter-rouge">settings.py</code> 파일에 들어가서 위 기존 코드를 밑의 코드로 변경해 줍니다. <strong>기존 코드의 SECRET_KEY는 복사해서 잘 간직해주세요 (나중에 따로 <code class="language-plaintext highlighter-rouge">.env</code> 파일을 만들어 이사 시켜 줄겁니다.)</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># settings.py
# ❗ 추가
</span><span class="kn">import</span> <span class="nn">environ</span>
<span class="kn">import</span> <span class="nn">os</span>

<span class="kn">from</span> <span class="nn">pathlib</span> <span class="kn">import</span> <span class="n">Path</span>

<span class="c1"># ❗ 추가
</span><span class="n">env</span> <span class="o">=</span> <span class="n">environ</span><span class="p">.</span><span class="n">Env</span><span class="p">(</span>
    <span class="c1"># set casting, default value
</span>    <span class="n">DEBUG</span><span class="o">=</span><span class="p">(</span><span class="nb">bool</span><span class="p">,</span> <span class="bp">False</span><span class="p">)</span>
<span class="p">)</span>

<span class="c1"># Build paths inside the project like this: BASE_DIR / 'subdir'.
</span><span class="n">BASE_DIR</span> <span class="o">=</span> <span class="n">Path</span><span class="p">(</span><span class="n">__file__</span><span class="p">).</span><span class="n">resolve</span><span class="p">().</span><span class="n">parent</span><span class="p">.</span><span class="n">parent</span>

<span class="c1"># ❗ 추가
# Take environment variables from .env file
</span><span class="n">environ</span><span class="p">.</span><span class="n">Env</span><span class="p">.</span><span class="n">read_env</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">BASE_DIR</span><span class="p">,</span> <span class="s">'.env'</span><span class="p">))</span>

<span class="c1"># Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/
</span>
<span class="c1"># SECURITY WARNING: keep the secret key used in production secret!
# ❗ 변경
</span><span class="n">SECRET_KEY</span> <span class="o">=</span> <span class="n">env</span><span class="p">(</span><span class="s">'SECRET_KEY'</span><span class="p">)</span>
</code></pre></div></div>

<p>✔ <code class="language-plaintext highlighter-rouge">settings.py</code> 코드를 위와 같이 수정해준 후 <code class="language-plaintext highlighter-rouge">.env</code> 파일을 루트 폴더 밑에 만들어줍니다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>.
├── .env
└── test_project
    ├── manage.py
    └── test_project
        ├── __init__.py
        ├── asgi.py
        ├── settings.py
        ├── urls.py
        └── wsgi.py
</code></pre></div></div>

<p>파일을 만들어주면 위와 같은 폴더 구조가 됩니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># .env
</span><span class="n">DEBUG</span><span class="o">=</span><span class="n">on</span>
<span class="c1"># ❗ 기존 `settins.py` 파일에 있던 SECRET_KEY를 넣어주세요
</span><span class="n">SECRET_KEY</span><span class="o">=</span><span class="n">my_secret_key</span>
<span class="n">DATABASE_URL</span><span class="o">=</span><span class="n">psql</span><span class="p">:</span><span class="o">//</span><span class="n">user</span><span class="p">:</span><span class="n">un</span><span class="o">-</span><span class="n">githubbedpassword</span><span class="o">@</span><span class="mf">127.0</span><span class="p">.</span><span class="mf">0.1</span><span class="p">:</span><span class="mi">8458</span><span class="o">/</span><span class="n">database</span>
<span class="n">SQLITE_URL</span><span class="o">=</span><span class="n">sqlite</span><span class="p">:</span><span class="o">///</span><span class="n">my</span><span class="o">-</span><span class="n">local</span><span class="o">-</span><span class="n">sqlite</span><span class="p">.</span><span class="n">db</span>
<span class="n">CACHE_URL</span><span class="o">=</span><span class="n">memcache</span><span class="p">:</span><span class="o">//</span><span class="mf">127.0</span><span class="p">.</span><span class="mf">0.1</span><span class="p">:</span><span class="mi">11211</span><span class="p">,</span><span class="mf">127.0</span><span class="p">.</span><span class="mf">0.1</span><span class="p">:</span><span class="mi">11212</span><span class="p">,</span><span class="mf">127.0</span><span class="p">.</span><span class="mf">0.1</span><span class="p">:</span><span class="mi">11213</span>
<span class="n">REDIS_URL</span><span class="o">=</span><span class="n">rediscache</span><span class="p">:</span><span class="o">//</span><span class="mf">127.0</span><span class="p">.</span><span class="mf">0.1</span><span class="p">:</span><span class="mi">6379</span><span class="o">/</span><span class="mi">1</span><span class="err">?</span><span class="n">client_class</span><span class="o">=</span><span class="n">django_redis</span><span class="p">.</span><span class="n">client</span><span class="p">.</span><span class="n">DefaultClient</span><span class="o">&amp;</span><span class="n">password</span><span class="o">=</span><span class="n">ungithubbed</span><span class="o">-</span><span class="n">secret</span>
</code></pre></div></div>

<p>✔ 만들어준 <code class="language-plaintext highlighter-rouge">.env</code> 파일에 위 코드를 넣어주고 SECRET_KEY 부분에 기존 <code class="language-plaintext highlighter-rouge">settings.py</code> 파일에 있던 SECRET_KEY를 넣어줍니다.</p>

<p>✔ 마지막으로 git이 <code class="language-plaintext highlighter-rouge">.env</code> 파일을 추적하지 못하도록 <code class="language-plaintext highlighter-rouge">.gitignore</code> 파일을 생성해 <code class="language-plaintext highlighter-rouge">.env</code> 파일을 넣어줍니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># .gitignore
</span>
<span class="p">.</span><span class="n">env</span>
</code></pre></div></div>

<p>위와 같이 <code class="language-plaintext highlighter-rouge">.gitignore</code> 파일에 원하는 파일명이나 폴더명을 적으면 git이 더이상 해당 파일이나 폴더를 추적하지 않게 됩니다. 우리는 SECRET_KEY라는 중요한 코드가 들어있는 <code class="language-plaintext highlighter-rouge">.env</code> 파일을 git이 추적하지 못하게 해주었습니다.</p>

<p>우리는 이제 SECRET_KEY를 안전하게 보관하게 되었습니다. 야호!</p>
:ET